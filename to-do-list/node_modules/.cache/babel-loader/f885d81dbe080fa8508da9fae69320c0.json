{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\til\\\\react\\\\to-do-list\\\\src\\\\TodoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  text: '프로젝트 생성하기',\n  done: true\n}, {\n  id: 2,\n  text: '컴포넌트 스타일링하기',\n  done: true\n}, {\n  id: 3,\n  text: 'context 만들기',\n  done: false\n}, {\n  id: 4,\n  text: '기능 구현하기',\n  done: false\n}];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIDContext = /*#__PURE__*/createContext();\nexport function TodoProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(TodoNextIDContext.Provider, {\n        value: nextId,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"MLelIZr2z8XWFJ9lCw3UijgeTSM=\");\n\n_c = TodoProvider;\nexport function useTodoState() {\n  _s2();\n\n  return useContext(TodoStateContext);\n}\n\n_s2(useTodoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useTodoDispatch() {\n  _s3();\n\n  return useContext(TodoDispatchContext);\n}\n\n_s3(useTodoDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useTodoNextId() {\n  _s4();\n\n  return useContext(TodoNextIDContext);\n}\n\n_s4(useTodoNextId, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["D:/Github/til/react/to-do-list/src/TodoContext.js"],"names":["React","createContext","useContext","useReducer","useRef","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIDContext","TodoProvider","children","dispatch","nextId","useTodoState","useTodoDispatch","useTodoNextId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,MAAvD,QAAqE,OAArE;;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,WAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADiB,EAMjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CANiB,EAWjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAXiB,EAgBjB;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,SAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CAhBiB,CAArB;;AAuBA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWD,IAAD,IACbA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAE,GAAGQ,IAAL;AAAWN,QAAAA,IAAI,EAAE,CAACM,IAAI,CAACN;AAAvB,OAAxB,GAAwDM,IADrD,CAAP;;AAGJ,SAAK,QAAL;AACI,aAAOJ,KAAK,CAACM,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAA1C,CAAP;;AACJ;AACI,YAAM,IAAIW,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVR;AAYH;;AAED,MAAMM,gBAAgB,gBAAGjB,aAAa,EAAtC;AACA,MAAMkB,mBAAmB,gBAAGlB,aAAa,EAAzC;AACA,MAAMmB,iBAAiB,gBAAGnB,aAAa,EAAvC;AAEA,OAAO,SAASoB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACvC,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBpB,UAAU,CAACM,WAAD,EAAcJ,YAAd,CAApC;AACA,QAAMmB,MAAM,GAAGpB,MAAM,CAAC,CAAD,CAArB;AAEA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEM,KAAlC;AAAA,2BACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEa,QAArC;AAAA,6BACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,QAAA,KAAK,EAAEC,MAAnC;AAAA,kBACKF;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAbeD,Y;;KAAAA,Y;AAehB,OAAO,SAASI,YAAT,GAAwB;AAAA;;AAC3B,SAAOvB,UAAU,CAACgB,gBAAD,CAAjB;AACH;;IAFeO,Y;;AAIhB,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAC9B,SAAOxB,UAAU,CAACiB,mBAAD,CAAjB;AACH;;IAFeO,e;;AAIhB,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,SAAOzB,UAAU,CAACkB,iBAAD,CAAjB;AACH;;IAFeO,a","sourcesContent":["import React, { createContext, useContext, useReducer, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '프로젝트 생성하기',\r\n        done: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        text: '컴포넌트 스타일링하기',\r\n        done: true,\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'context 만들기',\r\n        done: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        text: '기능 구현하기',\r\n        done: false,\r\n    },\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map((todo) =>\r\n                todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter((todo) => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIDContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIDContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIDContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    return useContext(TodoStateContext);\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    return useContext(TodoDispatchContext);\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    return useContext(TodoNextIDContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}